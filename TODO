* Check function returns against new return policy --all --2 --STICKY
* Userspace lib --indoril --3 --MOSTLY-DONE
* Link the test properly with the userspace lib so we can see if it's functional --2 --all
* Hash function in userspace lib --all --7 :: change to priority swap array
* Also, remodel proc_read to read partial. --all --8
* Perform init on fork and destroy on do_exit for all curses --nalfemp --9
* Modify curse_trigger to optional deference of function call, and change injection code of curse implementer to macro definition of {if (!trigger(.., nodefer) return;} --all --2 --REJECTED "Too much freedom (at least for now)"
* Create a better version down to the assembly instructions of curse_trigger. Maybe the hashing should be done in kernel space. --all --2 --REJECTED "::Future static creation of curse list"
* Check how to implement other curses like no-curse --all --3 --PARTIAL "Ask Vaggeli how we can offer that"
* Add permission copy on fork --master --3 --FIXED
* Add triggerred && check in curse_k_wrapper while condition. --master --3 --FIXED
* Finish up no_curse RANDOM_OOPS --ale1ster --5 --FIXED
* Add no_fs_cache counter --master --5 --FIXED


And so the story goes...

 Fix binary op spaces (too tired right now) --ale1ster --1 --FIXED
 Change kernelspace calls to accept index --aleister-master --1 --FIXED
 Beautify library from userspace inclusion (done from laptop after 12:00) --ale1ster --1 --FIXED
 Check proper use of activation. --ale1ster --2 --FIXED
 Add curse specific init and destroy calls in cast and lift. --ale1ster-nalfemp --3 --FIXED
 check for race conditions on task_struct and use of its spinlocks --nalfemp --3 --FIXED
 Need to fix activation/deactivation to activate targeted curses (activate general system only if target is unspecified) --ale1ster --3 --FIXED
 Need to create permissions verification mechanism (function?) --master --3 --FIXED
 Ioctl added (ctrl). We have to test inherritance of calls in fork (exec), where tack_curse_struct is initialized. --all --3 --MISTAKEN "Already solved"
 Make bitmask_from_id proper (for-if-return) --ale1ster --3 --FIXED
 Permission checking is still not included in the source code --master --3 --FIXED
 Fix deactivation (Policy: we act on list_pointer only after we take system_status sema). --ale1ster --4 --FIXED
 Have to install macro aliases for curse_trigger and curse_k_wrapper, so that when the curse system is not compiled with the kernel, they do not slow down the system. --ale1ster --4 --FIXED
 Initialize flag_lock @ curse_init --master --4 --FIXED
 Initialize trigger field during field initialization of task_curse_struct. --master --4 --FIXED
 Add curse_trigger --ale1ster-master --4 --FIXED
 Modularize curse_k_wrapper to be called from read, without make errors --ale1ster-master --4 --FIXED "Have to move it elsewhere: after scheduler?"
 Check curse_externals.c on curse_init --master --4 --FIXED
 Alter system wide activation on entry 0 of table --ale1ster --5 --FIXED "Check proper behavior of no_fs_cache"
 Check the system initializing action. We have to insert the hook for initial actions there (current practice in bad practice) --all --5 --FIXED
 Initialize task_curse_struct in fork (allocation pending?) --all --5 --FIXED
 Fix curse_list.h inclusion error on include of curse.h from userspace. For now works with comment-out. --ale1ster --5 --FIXED
 Before ioctl, we have to add a spinlock entry on struct syscurse (for ioctl related issues) --ale1ster --5 --FIXED
 Create interface ioctl with user --all --6 --FIXED
 Change curse_bit to curse_active_bit in syscurse (and all used points) --ale1ster --6 --REJECTED "Too long name."
 Need to check effective permissions verification mechanism --master --6 --FIXED
 Create permissions in task_curse_struct (3bit field UGS) --ale1ster --6 --FIXED
 Maybe change todo.py to ignore everything after an empty line or a ============ delimiter, so we can keep history? --master --6 --FIXED
 When we are a little bit more loose, I need to remodularize the whole code. --ale1ster-master --6 --FIXED
 If there is time, we have to create a normal list_all function (with copy_to_user) as an alternative to proc entry (case of unmounted) --ale1ster --8 --FIXED
 Check ptrace mechanism for hijacking the syscall table at runtime --ale1ster --9 --REJECTED
